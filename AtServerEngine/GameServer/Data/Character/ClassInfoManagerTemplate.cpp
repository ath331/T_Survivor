////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief ClassInfoManagerTemplate class
////////////////////////////////////////////////////////////////////////////////////////////////////


#pragma once
#include "pch.h"
#include <iostream>
#include "ClassInfoManagerTemplate.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief GetInfo
////////////////////////////////////////////////////////////////////////////////////////////////////
const ClassInfo* ClassInfoManagerTemplate::GetInfo( Protocol::EPlayerType id )
{
	auto iter = m_infoMap.find( id );
	if ( iter == m_infoMap.end() )
		return nullptr;

	return &(iter->second);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief AddInfo
////////////////////////////////////////////////////////////////////////////////////////////////////
AtBool ClassInfoManagerTemplate::_AddInfo(
	    Protocol::EPlayerType id,
	    AtInt32 hP,
	    AtInt32 mP,
	    AtInt32 damage,
	    AtInt32 magicDamage )
{
	auto iter = m_infoMap.find( id );
	if ( iter != m_infoMap.end() )
		return false;

	ClassInfo info = ClassInfo(
	    id,
	    hP,
	    mP,
	    damage,
	    magicDamage );

	m_infoMap[ id ] = info;

	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief Initialize
////////////////////////////////////////////////////////////////////////////////////////////////////
AtBool ClassInfoManagerTemplate::_Initialize()
{
	INFO_LOG( "ClassInfoManager Initialize()" );
	if ( !_AddInfo( Protocol::EPlayerType::PLAYER_TYPE_KNIGHT, 150, 100, 100, 30 ) ) return false;
	if ( !_AddInfo( Protocol::EPlayerType::PLAYER_TYPE_MAGE, 100, 150, 30, 120 ) ) return false;

	return true;
}