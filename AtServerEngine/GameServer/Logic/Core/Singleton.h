////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief Singleton File
////////////////////////////////////////////////////////////////////////////////////////////////////


#pragma once


////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief Singleton Class
////////////////////////////////////////////////////////////////////////////////////////////////////
template <typename T>
class Singleton
{
public:
	// 복사 생성자와 이동 생성자, 할당 연산자 모두 삭제
	Singleton( const Singleton& ) = delete;
	Singleton( Singleton&& ) = delete;
	Singleton& operator=( const Singleton& ) = delete;
	Singleton& operator=( Singleton&& ) = delete;

	// 싱글톤 인스턴스를 반환하는 정적 메서드
	static T& GetInstance()
	{
		static T instance;
		return instance;
	}

protected:
	Singleton() = default;
	virtual ~Singleton() = default;
};